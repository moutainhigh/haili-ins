logging.config: classpath:log4j2.xml
online: false

#logging.config: classpath:log-dev.xml

pagehelper:
  helperDialect: mysql
  reasonable: false
  supportMethodsArguments: true
  params: count=countSql

mybatis:
  type-aliases-package: com.haili.ins.dao.model
  mapper-locations: classpath*:/mybatis/*.xml

##tk.mybatis
mapper:
  #mappers: tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.Mapper2
  notEmpty: true

## org.springframework.boot.autoconfigure.web.ServerProperties
server.port: 9003


spring:
#  main:
#    allow-bean-definition-overriding: true
  # 配置下面两个值将会走到 ControllerAdvice 全局里面去
# org.springframework.boot.autoconfigure.web.WebMvcProperties
  mvc.throw-exception-if-no-handler-found: true
# org.springframework.boot.autoconfigure.web.ResourceProperties
  resources.add-mappings: false
# org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
#  redis:
#    host: 192.168.100.211
#    port: 6379
  haili:
    webflux:
      filter.enabled: true
    api:
      version: 1,2
  # 当前服务名
  application.name: order-server
  datasource:
    url:  jdbc:mysql://47.100.3.157:3306/order?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
    userName: root
    password: 123456
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  rabbitmq:
    #配置rabbitmq的主机
    host: 47.100.3.157
    #访问端口
    port: 5672
    #安装RabbitMQ时配置的用户名
    username: root
    #安装RabbitMQ时配置的密码
    password: 123456
    #消息发送到交换机确认机制,是否确认回调
    publisher-confirms: true
    #消息发送到交换机确认机制,是否返回回调
    publisher-returns: true
    listener:
      simple:
        #采用手动应答
        acknowledge-mode: manual
        #指定最小消费者数量
        concurrency: 1
        #指定最大消费者数量
        max-concurrency: 1
        retry:
          #是否支持重试
          enabled: true
      direct:
        acknowledge-mode: manual
    connection-timeout: 50000

# 注册中心地址, 多个使用 , 分隔
register.center: http://127.0.0.1:9997/eureka/

feign:
  compression:
    request:
      enabled: true
      mime-types: ["text/xml","application/xml","application/json"]
      min-request-size: 2048
    response.enabled: true
  hystrix:
    # 在feign中开启hystrix功能，默认情况下feign不开启hystrix功能
    enabled: true
  ## 配置httpclient线程池
  httpclient:
    enabled: false
  okhttp:
    enabled: true
    log.level: "HEADERS"

hystrix.command.default.execution:
  timeout.enabled: true
  isolation:
    thread:
      timeoutInMilliseconds: 60000



eureka:
  client:
    # 开启健康检查
    healthcheck.enabled: true
    # feign 间隔多久去拉取服务注册信息(默认 30 秒)
    registry-fetch-interval-seconds: 10
    serviceUrl.defaultZone: ${register.center}
  instance:
    # feign 发送心跳给 server 端的频率(默认 30 秒)
    lease-renewal-interval-in-seconds: 5
    # server 收到心跳等待下一次心跳的超时时间, 要比上面的大(默认 90 秒)
    lease-expiration-duration-in-seconds: 10
    preferIpAddress: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}

###自定义的 rabbitMq 属性
mq:
  retry:
    count: 5
  message:
    exchange:
      name: "test-send-award-exchange"
      queue:
        name: "test-send-coupon-queue"
      routing-key:
        name: "test-routing-key-send-coupon"
    dead:
      exchange:
        name: "test-dead-queue-exchange"
        queue:
          name: "test-dead-queue"
        routing-key:
          name: "test-routing-key-dead-queue"